{"version":3,"sources":["components/Card.js","pages/Contacts.js","pages/Auth.js","pages/GetContact.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["Card","contact","deleteContact","fullName","email","phone","address","avatar","editedContact","_id","useState","isEditable","setIsEditable","bgColor","setBgColor","editCardHandler","e","info","id","target","getAttribute","files","innerText","editCheckHandler","console","log","charCode","preventDefault","className","style","backgroundColor","data-id","type","onChange","src","onKeyPress","onBlur","contentEditable","onClick","finalForm","FormData","Object","keys","forEach","key","append","options","method","headers","localStorage","getItem","body","fetch","then","data","json","output","status","catch","err","Contacts","history","useHistory","useEffect","push","form","setForm","contacts","setContacts","fillForm","field","newForm","value","message","deleteContactHandler","response","alert","newList","filter","cards","length","map","bind","onSubmit","required","placeholder","Auth","props","pass","JSON","stringify","nativeEvent","submitter","result","setItem","token","name","Array","from","file","values","fromEntries","multiple","exact","activeClassName","to","App","path","GetContact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.acae26a5.chunk.js","sourcesContent":["import \"./Cards.css\";\r\nimport {useState} from \"react\";\r\n\r\nconst Card = ({contact, deleteContact}) => {\r\n    const {fullName, email, phone, address, avatar} = contact;\r\n    const editedContact = {_id: contact._id};\r\n    //delete editedContact._id;\r\n    \r\n    const [isEditable, setIsEditable] = useState(false);\r\n    const [bgColor, setBgColor] = useState('black');\r\n\r\n    const editToggle = () => {\r\n        setIsEditable(!isEditable);\r\n        setBgColor(isEditable?'white':'lightblue');\r\n    }\r\n\r\n    const editCardHandler = (e) => {\r\n        const id = e.target.getAttribute(\"data-id\");\r\n        let info;\r\n        if (id == 'file') {\r\n            info = e.target.files[0];\r\n        } else {\r\n            info = e.target.innerText;\r\n        }\r\n        /* console.log({id, info}); */\r\n        editedContact[id]=info;\r\n    }\r\n\r\n    const editCheckHandler = (e) => {\r\n        console.log(e)\r\n        if (e.charCode == 13) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    const updateContactHandler = () => {\r\n        console.log(editedContact);\r\n\r\n        let finalForm = new FormData();\r\n\r\n\r\n        Object.keys(editedContact).forEach(key => {\r\n            finalForm.append(key, editedContact[key]) \r\n        })\r\n\r\n        const url = 'https://contacts-app-class.herokuapp.com/contacts/update';\r\n        const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'x-auth-token': localStorage.getItem('token')\r\n        },\r\n        body: finalForm\r\n        }\r\n\r\n        fetch(url, options)\r\n        .then(data => data.json().then(output => {\r\n            if (output.status === 'success') {\r\n                setIsEditable(false);\r\n                setBgColor('green');\r\n            } else {\r\n                setBgColor('coral');\r\n            }\r\n        }))\r\n        .catch(err => setBgColor('coral'));\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <div className='card' style={{backgroundColor: bgColor}}>\r\n            {isEditable?<input data-id=\"file\" type=\"file\" onChange= {editCardHandler}/>:<img src = {\"https://contacts-app-class.herokuapp.com/avatars/\" + avatar}/>}\r\n            <div data-id=\"fullName\"\r\n                onKeyPress={editCheckHandler}\r\n                onBlur = {editCardHandler}\r\n                contentEditable={isEditable}>\r\n                {fullName}\r\n            </div>\r\n            <div data-id=\"email\"\r\n                onKeyPress={editCheckHandler}\r\n                onBlur = {editCardHandler}\r\n                contentEditable={isEditable}>\r\n                {email}\r\n            </div>\r\n            <div data-id=\"phone\"\r\n                onKeyPress={editCheckHandler}\r\n                onBlur = {editCardHandler}\r\n                contentEditable={isEditable}>\r\n                {phone}\r\n            </div>\r\n            <div data-id=\"address\"\r\n                onKeyPress={editCheckHandler}\r\n                onBlur = {editCardHandler}\r\n                contentEditable={isEditable}>\r\n                {address}\r\n            </div>\r\n            <button onClick={editToggle}>✏️</button>\r\n            <button onClick={updateContactHandler}>💾</button>\r\n            <button onClick={deleteContact} >🗑️</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport Card from '../components/Card';\r\n\r\nfunction Contacts() {\r\n \r\nlet history = useHistory();\r\nuseEffect(() => {\r\n  if (!localStorage.getItem('token')) {\r\n    history.push('/auth')\r\n  }\r\n})\r\n\r\n    const headers = {\r\n    'Content-Type': 'application/json',\r\n    'x-auth-token': localStorage.getItem('token')\r\n}\r\n \r\n  const [form, setForm] = useState({\r\n  fullName: '', \r\n  email: '', \r\n  phone: '', \r\n  address: ''\r\n});\r\n  \r\n  const [contacts, setContacts] = useState([{\r\n    _id:\"1\",\r\n    fullName: 'test',\r\n    email: 't@t.com',\r\n    phone: '123456',\r\n    address: 'test'}\r\n  ]);\r\n\r\n  const fillForm = (e, field) => {\r\n    let newForm = {...form};\r\n    newForm[field] = e.target.value;\r\n    setForm(newForm);\r\n  }\r\n\r\n const formSubmitHandler = (e) => {\r\n   e.preventDefault();\r\n\r\nlet finalForm = new FormData();\r\nfinalForm.append('fullName', form.fullName);\r\nfinalForm.append('email', form.email);\r\nfinalForm.append('phone', form.phone);\r\nfinalForm.append('address', form.address);\r\nfinalForm.append('file', e.target[4].files[0])\r\nconsole.log('finalForm', finalForm);\r\n\r\n    const url = 'https://contacts-app-class.herokuapp.com/contacts/new';\r\n    const options = {\r\n      method: \"POST\",\r\n      headers:{\r\n        'x-auth-token': localStorage.getItem('token')\r\n    },\r\n       body: finalForm\r\n    }\r\n    fetch(url, options).then(data => data.json().then(output => setContacts([...contacts, output])))\r\n }\r\n \r\n  useEffect(() => {\r\n  const url ='https://contacts-app-class.herokuapp.com/contacts/all';\r\n  const options = {\r\n    headers \r\n  }\r\n  fetch(url, options).then(data => data.json().then(output => {\r\n    if (output.status ==='success') {\r\n    setContacts(output.data);\r\n    } else {\r\n      console.log(output.message);\r\n    }\r\n  })); \r\n}, []\r\n);\r\n\r\nconst deleteContactHandler = (id) => {\r\n\r\n  const url ='https://contacts-app-class.herokuapp.com/contacts/'+ id;\r\n  const options = {\r\n    method: \"DELETE\",\r\n    headers\r\n  }\r\n  fetch(url, options)\r\n  .then(response => response.json().then(output => {\r\n    \r\n  if(output.status === 'success'){\r\n    alert(output.message);\r\n    let newList = contacts.filter(contact => {\r\n      if(contact._id !== output.data){\r\n        return contact\r\n      }\r\n     });\r\n    setContacts(newList);\r\n  } else {\r\n      alert('There is an error. Check console for details')\r\n      console.log(output.message);\r\n   }\r\n  }))\r\n  .catch(err=>{\r\n    alert(err)\r\n  })\r\n}\r\n\r\nlet cards = [];\r\nif (typeof(contacts) =='object' && contacts.length > 0) {\r\n  cards = contacts.map(contact => <Card  \r\n    key={contact['_id']}  \r\n     contact = {contact}\r\n    deleteContact = {deleteContactHandler.bind(this,contact['_id'])}\r\n    />);\r\n}  \r\n\r\n return (\r\n\r\n    <div className=\"App\">\r\n      <form className=\"form\" onSubmit={formSubmitHandler}>\r\n    <input required placeholder=\"Full name\" value={form.fullName} onChange= {(e) => fillForm(e, 'fullName')}/>\r\n    <input type=\"email\"  placeholder=\"Email\" value={form.email}  onChange= {(e) => fillForm(e, 'email')}/>\r\n    <input type=\"tel\" placeholder=\"Phone number\" value={form.phone}  onChange= {(e) => fillForm(e, 'phone')}/>\r\n    <input placeholder=\"Address\" value={form.address}  onChange= {(e) => fillForm(e, 'address')}/>\r\n    <input type='file'/>\r\n    <button className='create-button'>Create Contact</button>\r\n    </form>\r\n\r\n    <section className='contact-list'>\r\n      {cards}\r\n    </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contacts;\r\n","import './Auth.css';\nimport { useHistory } from 'react-router-dom';\n\nfunction Auth (props) {\n    \n    let history = useHistory();\n\n    let submitHandler = (e) => {\n        e.preventDefault();\n        console.log(e);\n\n        let data = {};\n\n        data.email = e.target[0].value;\n        data.pass = e.target[1].value;\n\n        let urlRegister = 'https://contacts-app-class.herokuapp.com/auth/register';\n        let urlLogin = 'https://contacts-app-class.herokuapp.com/auth/login';\n        let options = {\n            method:'POST', \n            headers: {\n                'Content-Type': 'application/json'\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body:JSON.stringify(data)\n        }\n\n        if (e.nativeEvent.submitter.id === \"register\"){\n            //alert('register')\n            //console.log(data)\n            fetch(urlRegister, options).then(result=>result.json().then(output=> {\n                if (output.status === \"success\") {\n                    alert(\"Congrats, you are registered! Please log in.\");\n                } else {\n                    alert(output.message);\n                }\n            }\n        )); \n\n        } else if (e.nativeEvent.submitter.id === \"login\") {\n           \n            fetch(urlLogin, options)\n            .then(result=>result.json()\n            .then(output=>{\n                alert(output.message);\n                    console.log(output);\n              localStorage.setItem('token', output.token);\n              history.push('/contacts');\n                })); \n        }\n    }\n\n    return (\n        <div className = \"wrapper\">\n            <form onSubmit = {submitHandler}>\n                <input name = \"email\" type = \"email\" />\n                <input  name = \"pass\" type = \"password\" />\n                <section>\n                    <input id = \"register\" type = \"submit\" value = \"Register\"/>\n                    <input id = \"login\" type = \"submit\" value = \"Login\"/>\n                </section>\n            </form>\n        </div>\n    )\n}\n\n\nexport default Auth;","import'./GetContacts.css'\r\n\r\nexport default  () => {\r\n\r\n    const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    console.log(e);\r\n\r\n    let data = new FormData();\r\n\r\n    data.append('fullName', e.target[0].value);\r\n    data.append('email', e.target[1].value);\r\n    data.append('phone', e.target[2].value);\r\n    data.append('message', e.target[3].value);\r\n     \r\n    Array.from(e.target[4].files).forEach(file => {\r\n        data.append('attachs', file);\r\n    })\r\n     for (var value of data.values()) {\r\n        console.log(value);\r\n    }\r\n    console.log(Object.fromEntries(data));\r\n\r\n    let url = 'https://contacts-app-class.herokuapp.com/get-contact';\r\n    \r\n    let options = {\r\n        method:'POST', \r\n        body:data\r\n    }\r\n    fetch(url, options).then((data) =>\r\n            data.json().then((output) => {\r\n                if (output.status === \"success\") {\r\n                    console.log(\"Congats\");\r\n                } else {\r\n                    console.log(output.message);\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div id='get-contact'>\r\n            <form className='contact-form' onSubmit={submitHandler}>\r\n                <input type=\"text\" placeholder='Full Name'/>\r\n                <input type=\"email\" placeholder='Email'/>\r\n                <input type=\"tel\" placeholder='Phone'/>\r\n                <textarea type=\"text\" placeholder='Message'></textarea>\r\n                <input type='file' multiple/>\r\n                <button>Get Contact</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import {NavLink} from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nexport default function (props) {\r\n    return (\r\n        <nav>\r\n            <NavLink\r\n                exact\r\n                className = \"nav-item\" \r\n                activeClassName=\"active\"\r\n                to = \"/\"\r\n            >Home</NavLink>\r\n\r\n            <NavLink\r\n                exact\r\n                className = \"nav-item\"\r\n                activeClassName=\"active\" \r\n                to = \"/contacts\"\r\n            >Contacts</NavLink>\r\n\r\n            <NavLink\r\n                exact\r\n                className = \"nav-item\"\r\n                activeClassName=\"active\" \r\n                to = \"/get-contact\"\r\n            >Get Contact</NavLink>\r\n        </nav>\r\n    );\r\n}","import './App.css';\nimport Contacts from  './pages/Contacts'\nimport Auth from  './pages/Auth'\nimport GetContact from './pages/GetContact'\nimport NavBar from './components/NavBar';\nimport { Switch, Route } from 'react-router-dom'\n \nfunction App() {\n  \n return (\n  <>\n  <NavBar/>\n  <Switch>\n    <Route path=\"/auth\">\n      <Auth />\n    </Route>\n    <Route path=\"/contacts\">\n      <Contacts />\n    </Route>\n    <Route path=\"/get-contact\">\n      <GetContact />\n    </Route>\n    <Route path=\"/\">\n      <Auth />\n    </Route>\n  </Switch>\n  </>\n  );\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App/>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}